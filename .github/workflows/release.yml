name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: 2fa
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary: 2fa
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: 2fa
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: 2fa
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: 2fa.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross for cross-compilation
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build binary
      run: |
        if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
      shell: bash

    - name: Package binary
      run: |
        mkdir -p release
        if [ "${{ runner.os }}" = "Windows" ]; then
          cp target/${{ matrix.target }}/release/${{ matrix.binary }} release/
        else
          cp target/${{ matrix.target }}/release/${{ matrix.binary }} release/
        fi
        cd release
        tar -czf ../2fa-cli-${{ matrix.target }}.tar.gz ${{ matrix.binary }}
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: 2fa-cli-${{ matrix.target }}
        path: 2fa-cli-${{ matrix.target }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        for file in artifacts/*/2fa-cli-*.tar.gz; do
          asset_name=$(basename "$file")
          echo "Uploading $asset_name"
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary "@$file" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$asset_name"
        done
